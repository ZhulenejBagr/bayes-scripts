mesh_only: False
make_plots: False
# if True, it removes sample dir right after the sample is collected
clean_sample_dir: True

#parameters:
#  - name: storativity
#    type: lognorm
#    bounds: [-16.4340685618576, 3.0]
#  - name: young_modulus
#    type: lognorm
#    bounds: [24.8176103991685, 0.7]
#  - name: init_stress_x
#    type: lognorm
#    bounds: [ 17.6221730477346, 0.75]
#  - name: init_stress_y
#    type: lognorm
#    bounds: [ 16.2134058307626, 0.75]
##  - name: init_stress_z
##    type: lognorm
##    bounds: [ 17.9098551201864, 0.3]
#  - name: perm_k0
#    type: lognorm
#    bounds: [ -48.8651125766410, 3.0]
#  - name: perm_eps
#    type: truncnorm
#    bounds : [1.1, 1000, 33, 21]
#  - name: perm_delta
#    type: lognorm
#    bounds: [ -36.8413614879047, 0.22]
#  - name: perm_gamma
#    type: lognorm
#    bounds: [ 1.79175946922806, 0.22]

parameters:
  - name: storativity
    type: lognorm
    bounds: [-19, 6.0]
  - name: young_modulus
    type: lognorm
    bounds: [22, 3]
  - name: init_stress_x
    type: lognorm
    bounds: [ 19, 1.5]
  - name: init_stress_y
    type: lognorm
    bounds: [ 15, 1.5]
  - name: perm_k0
    type: lognorm
    bounds: [-46, 4]
  - name: perm_eps
    type: truncnorm
    bounds : [1.1, 1000, 28, 25]
  - name: perm_delta
    type: lognorm
    bounds: [ -36, 1 ]
  - name: perm_gamma
    type: lognorm
    bounds: [ 1.6, 2 ]

sampler_parameters:
  # how many samples to collect
  sample_count: 1000
  # how many samples to scrap
  tune_count: 0
  # how many chains to run
  chain_count: 20
  # whether to force sequential sampling, even with chains > 1 and ray present
  force_sequential: False
  # standard deviation of noise function
  noise_std: 50
  # proposal to use
  proposal: "DREAM"
  # whether to adapt scaling
  proposal_adaptive: True
  # how often to adapt scaling
  proposal_adaptivity_period: 20
  proposal_gamma: 0.05
  m0: 5
  delta: 3
  lcr: 8
  b_star: 0.001
  archive_limit: 0

# synthetic observe params
synthetic_data:
  corr_length: 20
  noise_std: 5

# types of collected data
collect_results:
  collect_vtk: False
  collect_observe: True

# FULL time axis
start_time: &start_time 0
end_time: &end_time 365
bored_time: &bored_time 17
output_times: &output_times
  - {begin: *start_time, step: 10, end: *bored_time}
  - {begin: *bored_time, step: 10, end: 100}
  - {begin: 100, step: 20, end: *end_time}

geometry:
    mesh_name: tunnel_mesh_cut_coarse_healed

observe_points:
  #- V1 # HGT1-5
  #- V2 # HGT1-4
  - H1 # HGT2-4
  #- H2 # HGT2-3
conductivity_observe_points: []
  #- V1_cond
  #- V2_cond
  #- H1_cond
  #- H2_cond

# parameters substituted into the HM model template
hm_params:
    mesh: tunnel_mesh.msh # healed mesh is used at the end (programmatically replaced)
    in_file: A04_hm

    output_times: *output_times
    start_time: *start_time
    end_time: *end_time
    bored_time: *bored_time

#    tunnel_dimX: *tunnel_dimX
#    tunnel_dimY: *tunnel_dimY

# physical parameters of main interest:
    biot_coefficient: 0.2
    # porosity nu=0.007, beta_w=4e-10 Pa-1, beta_s = (biot-nu)*(1-biot)/bulk_modulus
    storativity: 7.290792E-08  # S = rho * g * (beta_s + nu * beta_w)
    # permeability k=6e-22 m2, dyn. viscosity mu=0.001 Pa.s, g=9.81 m.s-2
    bulk_conductivity: 5.886E-15  # K = k * rho * g /mu
    init_pressure: 275 # 3MPa = p = h*rho*g => h = 300 m

    young_modulus: 60e9
    poisson_ratio: 0.2
    init_stress_x: 45e6
    init_stress_y: 11e6
    init_stress_z: 60e6

    # non-linear permeability
#    perm_kr: 8e-20
#    perm_km: 8e-17
#    perm_beta: 4e-7
#    perm_gamma: 3e-7

    perm_k0: 6e-22
    perm_eps: 33.3
    perm_delta: 1e-16
    perm_gamma: 6

# solver's settings
    mechanics_solver__a_tol: 0
    mechanics_solver__r_tol: 1e-12
    mechanics_solver__options: -ksp_type cg -pc_type hypre -pc_hypre_type boomeramg #-ksp_monitor
        # -ksp_type cg -pc_type icc -pc_factor_levels 2 -ksp_diagonal_scale -ksp_diagonal_scale_fix -pc_factor_fill 3.0 -ksp_monitor

    flow_solver__a_tol: 0
    flow_solver__r_tol: 1e-12

    flow_solver__options: -ksp_type cg -pc_type hypre -pc_hypre_type boomeramg #-ksp_monitor
        # -ksp_type cg -pc_type hypre -pc_hypre_type boomeramg  -pc_hypre_boomeramg_coarsen_type HMIS -pc_hypre_boomeramg_strong_threshold 0.5  -ksp_monitor

copy_files: []
  #- C01_hm_tmpl.yaml

# The flow executable and arguments to use.
local:
  flow_executable:
    ### this is the simplest case when using inside docker (or singularity) image
    # running with empty environment (env -i); keep flow123d paths:
#    - env
#    - -i
    #- LD_LIBRARY_PATH=/opt/flow123d/lib
#    - /opt/flow123d/bin/flow123d
    - flow123d
    ### this is for installed Flow123d package or individual build
#    - /home/domesova/flow123d_3.1.0/bin/fterm.sh
#    - /home/paulie/local/flow123d/flow123d_3.1.0/bin/fterm.sh
#    - /home/paulie/Workspace/flow123d/bin/fterm
    ### for flow123d individual build (not docker image install)
#    - --no-term
#    - rel
    ### for flow123d (docker image install)
#    - --version
#    - "3.1.0"
#    - --tty
#    - "false"
#    - --interactive
#    - "false"
    ### this is for both installed Flow123d package or individual build
#    - run
    - --no_profiler
  np: 1
  gmsh_executable:
    - /home/paulie/Workspace/Endorse-2Dtest-Bayes/venv/bin/gmsh
